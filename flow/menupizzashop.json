{"onboarding":{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"f7355143-9a62-4b31-82d2-61ff068ae148","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":false,"position":"right","editing":false},"$invalid":false},"$invalid":false,"$$hashKey":"object:694"}],"$conditionOutputs":[{"stateId":"welcome","conditions":[{"source":"input","comparison":"matches","values":[".*"],"$$hashKey":"object:741"}],"$id":"9a61c52d-8479-4051-a0b8-50d1534ae6fd","$connId":"con_3","$invalid":false,"$$hashKey":"object:722"}],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"d0468ec3-4541-4f00-a87d-14827b5a5dba","type":"ExecuteScript","$title":"Process \"configGlobal\"","$invalid":false,"settings":{"function":"run","source":"/**\n* Author: Jean Silva\n* Version: 1.0\n*/\nconst discoverEnvironment = (rawData) => {\n    let debugEnvironment = (rawData.tunnelOwner.length == 0)\n    let homologEnvironment = (rawData.tunnelOwner.match(/(hmg|homolog|homg)/gi))\n    let developmentEnvironment = (rawData.tunnelOwner.match(/(dev|development|bet)/gi))\n    let stagingEnvironment = (rawData.stagingEnvironment)\n    if (debugEnvironment) return 'Dev'\n    if (homologEnvironment) return 'Hmg'\n    if (developmentEnvironment) return 'Tst'\n    if (stagingEnvironment) return 'Stg'\n    return 'Prd'\n}\n\nconst discoverChannel = (config) => {\n    if (config.originator.search('@wa.gw.msging.net') != -1) return 'WhatsApp'\n    if (config.originator.search('@0mn.io') != -1) return 'WebChat'\n    return 'Default'\n}\n\nconst discoverBold = (config) => {\n    let bold = {\n        'WhatsApp': { ni: '*', nf: '*' },\n        'WebChat': { ni: '<b>', nf: '</b>' },\n        'Default': { ni: '', nf: '' },\n    }\n    return bold[config.channel]\n}\n\nconst discoverItalic = (config) => {\n    let italic = {\n        'WhatsApp': { ii: '_', if: '_' },\n        'WebChat': { ii: '<i>', if: '</i>' },\n        'Default': { ii: '', if: '' },\n    }\n    return italic[config.channel]\n}\n/**\n * Main function of execution\n * [1] All input variables needs to be passed as function run() param.\n * [2] Objects received as param needs to be parsed. Ex.: JSON.parse(inputVariable).\n * [3] Objects returned needs to be stringfied. Ex.: JSON.stringify(inputVariable).\n */\nfunction run(rawData) {\n    rawData = {\n        tunnelOriginator: `{{tunnel.originator}}`,\n        tunnelOwner: `{{tunnel.owner}}`,\n        stagingEnvironment: false\n    }\n    let config = {}\n    let textFormatter = {}\n    let dataWit = new Date()\n    let dayWit = (\n        dataWit.getDate().toString().length == 1 ? `0${dataWit.getDate()}` : dataWit.getDate()\n\n    )\n    let monthWit = (\n        dataWit.getMonth().toString().length == 1 ? `0${dataWit.getMonth() + 1}` : dataWit.getMonth() + 1\n    )\n    try {\n        if (!rawData) throw new Error('rawData is empty!')\n        config.environment = discoverEnvironment(rawData)\n        config.originator = config.environment != 'Dev' ? rawData.tunnelOriginator : '{{config.client}}'\n        config.channel = discoverChannel(config)\n        textFormatter = discoverBold(config)\n        config.ni = textFormatter.ni\n        config.nf = textFormatter.nf\n        textFormatter = discoverItalic(config)\n        config.ii = textFormatter.ii\n        config.if = textFormatter.if\n        dataWit = `${dataWit.getFullYear()}${monthWit}${dayWit}`\n        config.witUrl = `https://api.wit.ai/message?v=${dataWit}`\n        config.witAuthorization = 'Bearer 437L4LEIZKDS5LLQ6VFE6CCSHNAR2B5D'\n        return config\n    } catch (error) {\n        return error.toString()\n    }\n}","inputVariables":[],"outputVariable":"config"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[],"id":"onboarding","root":true,"$title":"Início","$position":{"top":"531.628px","left":"316.093px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"fallback":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"8d096494-ca61-4390-b45e-827763b528eb","type":"text/plain"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"error","conditions":[{"source":"input","comparison":"matches","values":[".*"]}],"$id":"e89e8fc1-dec5-4080-9e19-290e6f1412e3","$connId":"con_8","$invalid":false}],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false},"$tags":[],"id":"fallback","$title":"Exceções","$position":{"top":"354px","left":"314px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"welcome":{"$contentActions":[{"action":{"$id":"286b20c9-4c3c-4961-83d2-59eea94bf48b","type":"SendMessage","settings":{"id":"00000000-0000-0000-0000-000000000000","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"00000000-0000-0000-0000-000000000000","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left","editing":false}},"$invalid":false,"$$hashKey":"object:1043"},{"action":{"$id":"9b6be9d8-829d-4832-a305-4db26fa0e074","type":"SendMessage","settings":{"id":"00000000-0000-0000-0000-000000000001","type":"text/plain","content":"Olá! {{contact.name}}!\nSeja bem-vindo(a)!\n\n{{config@ni}}Teste{{config@nf}}\n\n{{config@ii}}Teste{{config@if}}\n\nGlobal: {{config}}","metadata":{}},"$cardContent":{"document":{"id":"00000000-0000-0000-0000-000000000001","type":"text/plain","content":"Olá! {{contact.name}}!\nSeja bem-vindo(a)!\n\n{{config@ni}}Teste{{config@nf}}\n\n{{config@ii}}Teste{{config@if}}\n\nGlobal: {{config}}"},"editable":true,"deletable":true,"position":"left","editing":false}},"$invalid":false,"$$hashKey":"object:1044"},{"input":{"bypass":false,"$cardContent":{"document":{"id":"3f250586-5086-411a-a122-e09d890f4bbb","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false,"$$hashKey":"object:1045"}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[],"id":"welcome","$title":"Boas vindas","$position":{"top":"532px","left":"552px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"error":{"$contentActions":[{"action":{"$id":"78927614-7782-4169-bed9-6b8649a2a3de","type":"SendMessage","settings":{"id":"00000000-0000-0000-0000-000000000002","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"00000000-0000-0000-0000-000000000002","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left","editing":false}},"$invalid":false},{"action":{"$id":"f19fbcf9-26e0-4035-b567-723ad6b8f86a","type":"SendMessage","settings":{"id":"00000000-0000-0000-0000-000000000003","type":"text/plain","content":"Desculpe, não consegui entender!"},"$cardContent":{"document":{"id":"00000000-0000-0000-0000-000000000003","type":"text/plain","content":"Desculpe, não consegui entender!"},"editable":true,"deletable":true,"position":"left","editing":false}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"ad307663-a71a-457a-bdb7-1a85df370101","type":"text/plain"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false},"$tags":[],"id":"error","$title":"Erro padrão","$position":{"top":"354px","left":"554px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false}}